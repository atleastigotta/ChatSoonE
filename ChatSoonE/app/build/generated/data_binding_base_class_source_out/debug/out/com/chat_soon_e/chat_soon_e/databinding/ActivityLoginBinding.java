// Generated by view binder compiler. Do not edit!
package com.chat_soon_e.chat_soon_e.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.chat_soon_e.chat_soon_e.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final View loginAddressUnderscoreView;

  @NonNull
  public final TextView loginAtSignTv;

  @NonNull
  public final EditText loginDirectInputEt;

  @NonNull
  public final TextView loginErrorTv;

  @NonNull
  public final ImageView loginFloLogoIv;

  @NonNull
  public final EditText loginIdEt;

  @NonNull
  public final View loginIdUnderscoreView;

  @NonNull
  public final ProgressBar loginLoadingPb;

  @NonNull
  public final EditText loginPasswordEt;

  @NonNull
  public final View loginPasswordUnderscoreView;

  @NonNull
  public final AppCompatButton loginSignInBtn;

  @NonNull
  public final TextView loginSignUpTv;

  private ActivityLoginBinding(@NonNull ConstraintLayout rootView,
      @NonNull View loginAddressUnderscoreView, @NonNull TextView loginAtSignTv,
      @NonNull EditText loginDirectInputEt, @NonNull TextView loginErrorTv,
      @NonNull ImageView loginFloLogoIv, @NonNull EditText loginIdEt,
      @NonNull View loginIdUnderscoreView, @NonNull ProgressBar loginLoadingPb,
      @NonNull EditText loginPasswordEt, @NonNull View loginPasswordUnderscoreView,
      @NonNull AppCompatButton loginSignInBtn, @NonNull TextView loginSignUpTv) {
    this.rootView = rootView;
    this.loginAddressUnderscoreView = loginAddressUnderscoreView;
    this.loginAtSignTv = loginAtSignTv;
    this.loginDirectInputEt = loginDirectInputEt;
    this.loginErrorTv = loginErrorTv;
    this.loginFloLogoIv = loginFloLogoIv;
    this.loginIdEt = loginIdEt;
    this.loginIdUnderscoreView = loginIdUnderscoreView;
    this.loginLoadingPb = loginLoadingPb;
    this.loginPasswordEt = loginPasswordEt;
    this.loginPasswordUnderscoreView = loginPasswordUnderscoreView;
    this.loginSignInBtn = loginSignInBtn;
    this.loginSignUpTv = loginSignUpTv;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.login_address_underscore_view;
      View loginAddressUnderscoreView = ViewBindings.findChildViewById(rootView, id);
      if (loginAddressUnderscoreView == null) {
        break missingId;
      }

      id = R.id.login_at_sign_tv;
      TextView loginAtSignTv = ViewBindings.findChildViewById(rootView, id);
      if (loginAtSignTv == null) {
        break missingId;
      }

      id = R.id.login_direct_input_et;
      EditText loginDirectInputEt = ViewBindings.findChildViewById(rootView, id);
      if (loginDirectInputEt == null) {
        break missingId;
      }

      id = R.id.login_error_tv;
      TextView loginErrorTv = ViewBindings.findChildViewById(rootView, id);
      if (loginErrorTv == null) {
        break missingId;
      }

      id = R.id.login_flo_logo_iv;
      ImageView loginFloLogoIv = ViewBindings.findChildViewById(rootView, id);
      if (loginFloLogoIv == null) {
        break missingId;
      }

      id = R.id.login_id_et;
      EditText loginIdEt = ViewBindings.findChildViewById(rootView, id);
      if (loginIdEt == null) {
        break missingId;
      }

      id = R.id.login_id_underscore_view;
      View loginIdUnderscoreView = ViewBindings.findChildViewById(rootView, id);
      if (loginIdUnderscoreView == null) {
        break missingId;
      }

      id = R.id.login_loading_pb;
      ProgressBar loginLoadingPb = ViewBindings.findChildViewById(rootView, id);
      if (loginLoadingPb == null) {
        break missingId;
      }

      id = R.id.login_password_et;
      EditText loginPasswordEt = ViewBindings.findChildViewById(rootView, id);
      if (loginPasswordEt == null) {
        break missingId;
      }

      id = R.id.login_password_underscore_view;
      View loginPasswordUnderscoreView = ViewBindings.findChildViewById(rootView, id);
      if (loginPasswordUnderscoreView == null) {
        break missingId;
      }

      id = R.id.login_sign_in_btn;
      AppCompatButton loginSignInBtn = ViewBindings.findChildViewById(rootView, id);
      if (loginSignInBtn == null) {
        break missingId;
      }

      id = R.id.login_sign_up_tv;
      TextView loginSignUpTv = ViewBindings.findChildViewById(rootView, id);
      if (loginSignUpTv == null) {
        break missingId;
      }

      return new ActivityLoginBinding((ConstraintLayout) rootView, loginAddressUnderscoreView,
          loginAtSignTv, loginDirectInputEt, loginErrorTv, loginFloLogoIv, loginIdEt,
          loginIdUnderscoreView, loginLoadingPb, loginPasswordEt, loginPasswordUnderscoreView,
          loginSignInBtn, loginSignUpTv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
