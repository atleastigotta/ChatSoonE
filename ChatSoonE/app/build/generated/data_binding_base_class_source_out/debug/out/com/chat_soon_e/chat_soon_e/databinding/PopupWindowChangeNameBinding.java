// Generated by view binder compiler. Do not edit!
package com.chat_soon_e.chat_soon_e.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.chat_soon_e.chat_soon_e.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PopupWindowChangeNameBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatButton popupWindowChangeNameButton;

  @NonNull
  public final EditText popupWindowChangeNameEt;

  @NonNull
  public final TextView popupWindowChangeNameTv;

  private PopupWindowChangeNameBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatButton popupWindowChangeNameButton,
      @NonNull EditText popupWindowChangeNameEt, @NonNull TextView popupWindowChangeNameTv) {
    this.rootView = rootView;
    this.popupWindowChangeNameButton = popupWindowChangeNameButton;
    this.popupWindowChangeNameEt = popupWindowChangeNameEt;
    this.popupWindowChangeNameTv = popupWindowChangeNameTv;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PopupWindowChangeNameBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PopupWindowChangeNameBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.popup_window_change_name, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PopupWindowChangeNameBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.popup_window_change_name_button;
      AppCompatButton popupWindowChangeNameButton = ViewBindings.findChildViewById(rootView, id);
      if (popupWindowChangeNameButton == null) {
        break missingId;
      }

      id = R.id.popup_window_change_name_et;
      EditText popupWindowChangeNameEt = ViewBindings.findChildViewById(rootView, id);
      if (popupWindowChangeNameEt == null) {
        break missingId;
      }

      id = R.id.popup_window_change_name_tv;
      TextView popupWindowChangeNameTv = ViewBindings.findChildViewById(rootView, id);
      if (popupWindowChangeNameTv == null) {
        break missingId;
      }

      return new PopupWindowChangeNameBinding((ConstraintLayout) rootView,
          popupWindowChangeNameButton, popupWindowChangeNameEt, popupWindowChangeNameTv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
